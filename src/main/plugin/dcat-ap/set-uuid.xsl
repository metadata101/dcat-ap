<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:xs="http://www.w3.org/2001/XMLSchema"
                xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
                xmlns:dct="http://purl.org/dc/terms/"
                xmlns:util="java:org.fao.geonet.util.XslUtil"
                xmlns:dcat="http://www.w3.org/ns/dcat#"
                xmlns:mdcat="https://data.vlaanderen.be/ns/metadata-dcat#"
                xmlns:foaf="http://xmlns.com/foaf/0.1/"
                version="2.0">
  <!--
  DCAT record UUID is defined in:
  * rdf:RDF/dcat:Catalog/dcat:record/dcat:CatalogRecord/@rdf:about
  * rdf:RDF/dcat:Catalog/dcat:record/dcat:CatalogRecord/dct:identifier

  Set modified date if not present.
  -->
  <xsl:variable name="uuidRegex" select="'([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}){1}'"/>

  <xsl:variable name="isVirtualCatalog"
                select="exists(/root/rdf:RDF[not(//(dcat:Dataset|dcat:DataService|dcat:DatasetSeries))]/dcat:Catalog)"
                as="xs:boolean"/>

  <xsl:variable name="record"
                select="if ($isVirtualCatalog)
                                           then /root/rdf:RDF/dcat:Catalog/dcat:record/dcat:CatalogRecord[not(@rdf:about = ../dcat:Catalog/dcat:record/@rdf:resource)]
                                           else /root/rdf:RDF/dcat:Catalog/dcat:record/dcat:CatalogRecord"/>

  <xsl:variable name="newUuid"
                select="string(/root/env/uuid)"
                as="xs:string"/>

  <xsl:variable name="newRdfAbout"
                select="if (matches($record/@rdf:about, $uuidRegex))
                            then replace($record/@rdf:about, $uuidRegex, $newUuid)
                            else concat(util:getSettingValue('nodeUrl'), 'api/records/', $newUuid)"
                as="xs:string"/>

  <xsl:variable name="currentDate"
                select="format-dateTime(current-dateTime(), '[Y0001]-[M01]-[D01]')"
                as="xs:string"/>

  <xsl:template match="/">
    <xsl:apply-templates select="root/rdf:RDF"/>
  </xsl:template>

  <xsl:template match="dcat:Catalog">
    <xsl:copy>
      <xsl:apply-templates select="@*|dct:title|dct:description|dct:publisher|dct:rightsHolder|foaf:homepage|dct:license|dct:language|
                                   dct:issued|dct:modified|dcat:themeTaxonomy|dct:hasPart|dct:isPartOf"/>

      <xsl:choose>
        <xsl:when test="dcat:record">
          <xsl:apply-templates select="dcat:record"/>
        </xsl:when>
        <xsl:otherwise>
          <xsl:call-template name="add-catalogue-record"/>
        </xsl:otherwise>
      </xsl:choose>

      <xsl:apply-templates select="dct:rights|dct:spatial|dcat:dataset|dcat:service|dcat:contactPoint|dcat:keyword|
                                   dcat:landingPage|dcat:qualifiedRelation|dct:subject|mdcat:MAGDA-categorie|mdcat:statuut|
                                   dcat:theme|dct:accessRights|dct:conformsTo|dct:creator"/>


      <!--
      Update virtual catalog identifier if not the new record UUID.
      Virtual catalogs dct:identifier is synchronized with the CatalogRecord dct:identifier.
      -->
      <xsl:choose>
        <xsl:when test="$isVirtualCatalog">
          <dct:identifier><xsl:value-of select="$newUuid"/></dct:identifier>
        </xsl:when>
        <xsl:otherwise>
          <xsl:apply-templates select="dct:identifier"/>
        </xsl:otherwise>
      </xsl:choose>

      <xsl:apply-templates select="dct:isReferencedBy|
                                   dct:relation|dct:type"/>
    </xsl:copy>
  </xsl:template>

  <xsl:template match="dcat:record[not($isVirtualCatalog) and not(dcat:CatalogRecord)]">
    <xsl:call-template name="add-catalogue-record"/>
  </xsl:template>

  <xsl:template match="dcat:CatalogRecord[not($isVirtualCatalog) or (
                                          $isVirtualCatalog
                                          and (count(../dcat:Catalog/dcat:record/@rdf:resource) = 0
                                          or not(@rdf:about = ../dcat:Catalog/dcat:record/@rdf:resource))
                                          )]">
    <xsl:copy>
      <xsl:apply-templates select="@*[not(name(.) = 'rdf:about')]"/>
      <xsl:attribute name="rdf:about" select="$newRdfAbout"/>
      <xsl:element name="dct:identifier">
        <xsl:value-of select="$newUuid"/>
      </xsl:element>
      <!-- foaf:primaryTopic will be generated by update-fixed-info.xsl -->
      <xsl:if test="not(dct:modified)">
        <dct:modified>
          <xsl:value-of select="$currentDate"/>
        </dct:modified>
      </xsl:if>
      <xsl:apply-templates select="*[name(.) != 'dct:identifier' and name(.) != 'foaf:primaryTopic']"/>
    </xsl:copy>
  </xsl:template>

  <xsl:template match="dcat:Dataset|dcat:DataService|dcat:DatasetSeries">
    <xsl:copy>
      <!-- Remove resource identification, will be generated by update-fixed-info -->
      <xsl:apply-templates select="@*[name() != 'rdf:about']|*[name() != 'dct:identifier']"/>
    </xsl:copy>
  </xsl:template>

  <xsl:template name="add-catalogue-record">
    <dcat:record>
      <dcat:CatalogRecord>
        <xsl:attribute name="rdf:about" select="$newRdfAbout"/>
        <dct:identifier>
          <xsl:value-of select="$newUuid"/>
        </dct:identifier>
        <!-- foaf:primaryTopic will be generated by the updated-fixed-info -->
        <dct:modified>
          <xsl:value-of select="$currentDate"/>
        </dct:modified>
      </dcat:CatalogRecord>
    </dcat:record>
  </xsl:template>

  <xsl:template match="@*|node()">
    <xsl:copy>
      <xsl:apply-templates select="@*|node()"/>
    </xsl:copy>
  </xsl:template>

</xsl:stylesheet>
